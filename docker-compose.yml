version: '2'
services:
  web:
    build: .
    env_file: .env
    command: npm run start
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules
    ports:
      - "5000:3000"
    # depends_on:
    #   - postgres
    # environment:
      # - DATAvolumes:
      # - .:/usr/app/
      # - /usr/app/node_modulesBASE_URL
  # postgres:
  #   image: postgres:9.6.2-alpine
  #   environment:
  #     - POSTGRES_USER
  #     - POSTGRES_DB

# version: '2'
# services:
#   # web sevices 
#   web:
#     # build the docker image based on specified docker file
#     build: .
#     # command to start the application after image is built and container is running
#     command: npm run dev
#     #  mount paths between host machine and container
#     volumes:
#       # mount root directory to working directory in container
#       - .:/usr/app/
#       # mount node_modules directory to the host machine using the build time directory
#       - /usr/app/node_modules
#       # expose ports
#       ports:
#         - "3000:3000"
#       # set postgres dependency
#       depends_on:
#       - postgres
#       # set environment variables in the host machine that would be used in the app
#       environment:
#         DATABASE_URL: postgres://todoapp@postgres/todos
#   # set up postgres service
#   postgres:
#     # use predefined postgres image (-alpine)
#     image: postgres:9.6.2-alpine
#     # postgres alpine accepts some environment variables
#     environment:
#       # create user postgres as the default user for postgreSQL
#       POSTGRES_USER: todoapp
#       # create the default database as todos
#       POSTGRES_DB: todos 